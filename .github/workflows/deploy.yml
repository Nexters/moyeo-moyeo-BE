name: CD with naver cloud platform

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Deploy Tags'
        required: false
        type: boolean
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make application-prod.yml
        if: contains(github.ref, 'main')
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.YML_PROD }}" > ./application-prod.yml
        shell: bash

      # gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test

      # docker build & push
      - name: Docker build & push
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/moyeomoyeo .
          docker push ${{ secrets.DOCKER_USERNAME }}/moyeomoyeo

      ## deploy to production
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.NCP_SERVER_IP }}
          username: ${{ secrets.NCP_SERVER_USERNAME }}
          password: ${{ secrets.NCP_SERVER_PASSWORD }}
          port: ${{ secrets.NCP_SERVER_SSH_PORT }}
          script: |
            sudo docker ps
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/moyeomoyeo
            cd ./app/docker
            sudo docker-compose up -d
            sudo docker image prune -f
